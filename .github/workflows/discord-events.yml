name: Discord Notifications

on:
  push:
    branches: [main, master, develop]  # Ajuste para suas branches principais
  pull_request:
    types: [opened, closed, reopened, ready_for_review]
  issues:
    types: [opened, closed, reopened]
  release:
    types: [published, released]
  create:  # Novas branches/tags
  delete:  # Branches/tags deletadas

jobs:
  notify-discord:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get Event Details
      id: event
      run: |
        echo "Processing event: ${{ github.event_name }}"
        
        # Definir cor baseada no evento
        case "${{ github.event_name }}" in
          "push")
            echo "color=3447003" >> $GITHUB_OUTPUT  # Azul
            echo "emoji=📝" >> $GITHUB_OUTPUT
            ;;
          "pull_request")
            case "${{ github.event.action }}" in
              "opened"|"reopened"|"ready_for_review")
                echo "color=16753920" >> $GITHUB_OUTPUT  # Laranja
                echo "emoji=🔀" >> $GITHUB_OUTPUT
                ;;
              "closed")
                if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                  echo "color=5814783" >> $GITHUB_OUTPUT  # Verde
                  echo "emoji=✅" >> $GITHUB_OUTPUT
                else
                  echo "color=15158332" >> $GITHUB_OUTPUT  # Vermelho
                  echo "emoji=❌" >> $GITHUB_OUTPUT
                fi
                ;;
            esac
            ;;
          "issues")
            case "${{ github.event.action }}" in
              "opened"|"reopened")
                echo "color=16753920" >> $GITHUB_OUTPUT  # Laranja
                echo "emoji=🐛" >> $GITHUB_OUTPUT
                ;;
              "closed")
                echo "color=5814783" >> $GITHUB_OUTPUT  # Verde
                echo "emoji=✅" >> $GITHUB_OUTPUT
                ;;
            esac
            ;;
          "release")
            echo "color=9936031" >> $GITHUB_OUTPUT  # Roxo
            echo "emoji=🚀" >> $GITHUB_OUTPUT
            ;;
          "create")
            echo "color=3066993" >> $GITHUB_OUTPUT  # Verde escuro
            echo "emoji=🌿" >> $GITHUB_OUTPUT
            ;;
          "delete")
            echo "color=15158332" >> $GITHUB_OUTPUT  # Vermelho
            echo "emoji=🗑️" >> $GITHUB_OUTPUT
            ;;
          *)
            echo "color=7506394" >> $GITHUB_OUTPUT  # Cinza
            echo "emoji=⚡" >> $GITHUB_OUTPUT
            ;;
        esac

    - name: Notify Push Event
      if: github.event_name == 'push'
      run: |
        # Contar commits
        commit_count=$(echo '${{ toJson(github.event.commits) }}' | jq length)
        
        # Pegar últimos 5 commits para mostrar
        commits_text=""
        if [ "$commit_count" -gt 0 ]; then
          commits_text=$(echo '${{ toJson(github.event.commits) }}' | jq -r '
            limit(5; .[]) | 
            "• [`" + (.id[:7]) + "`](" + .url + ") " + .message'
          )
        fi
        
        # Preparar descrição
        if [ "$commit_count" -gt 5 ]; then
          commits_text="$commits_text\n... e mais $(($commit_count - 5)) commit(s)"
        fi
        
        cat > /tmp/discord_payload.json << EOF
        {
          "embeds": [{
            "title": "${{ steps.event.outputs.emoji }} Push para \`${{ github.ref_name }}\`",
            "description": "**${{ github.actor }}** fez push de **${commit_count}** commit(s)\n\n${commits_text}",
            "color": ${{ steps.event.outputs.color }},
            "fields": [
              {
                "name": "Repositório",
                "value": "[${{ github.repository }}](${{ github.event.repository.html_url }})",
                "inline": true
              },
              {
                "name": "Branch",
                "value": "\`${{ github.ref_name }}\`",
                "inline": true
              },
              {
                "name": "Commits",
                "value": "${commit_count}",
                "inline": true
              }
            ],
            "author": {
              "name": "${{ github.actor }}",
              "icon_url": "${{ github.event.sender.avatar_url }}"
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
          }]
        }
        EOF
        
        curl -H "Content-Type: application/json" -X POST -d @/tmp/discord_payload.json "${{ secrets.DISCORD_WEBHOOK_URL }}"

    - name: Notify Pull Request Event
      if: github.event_name == 'pull_request'
      run: |
        # Definir ação em português
        case "${{ github.event.action }}" in
          "opened") action_pt="abriu" ;;
          "closed") 
            if [ "${{ github.event.pull_request.merged }}" = "true" ]; then
              action_pt="fez merge de"
            else
              action_pt="fechou"
            fi
            ;;
          "reopened") action_pt="reabriu" ;;
          "ready_for_review") action_pt="marcou como pronta para review" ;;
          *) action_pt="${{ github.event.action }}" ;;
        esac
        
        cat > /tmp/discord_payload.json << EOF
        {
          "embeds": [{
            "title": "${{ steps.event.outputs.emoji }} Pull Request ${action_pt}",
            "description": "**${{ github.actor }}** ${action_pt} a PR [#${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})",
            "color": ${{ steps.event.outputs.color }},
            "fields": [
              {
                "name": "De → Para",
                "value": "\`${{ github.event.pull_request.head.ref }}\` → \`${{ github.event.pull_request.base.ref }}\`",
                "inline": true
              },
              {
                "name": "Arquivos alterados",
                "value": "${{ github.event.pull_request.changed_files }}",
                "inline": true
              },
              {
                "name": "Linhas",
                "value": "+${{ github.event.pull_request.additions }} -${{ github.event.pull_request.deletions }}",
                "inline": true
              }
            ],
            "author": {
              "name": "${{ github.actor }}",
              "icon_url": "${{ github.event.sender.avatar_url }}"
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
          }]
        }
        EOF
        
        curl -H "Content-Type: application/json" -X POST -d @/tmp/discord_payload.json "${{ secrets.DISCORD_WEBHOOK_URL }}"

    - name: Notify Issues Event
      if: github.event_name == 'issues'
      run: |
        # Definir ação em português
        case "${{ github.event.action }}" in
          "opened") action_pt="abriu" ;;
          "closed") action_pt="fechou" ;;
          "reopened") action_pt="reabriu" ;;
          *) action_pt="${{ github.event.action }}" ;;
        esac
        
        cat > /tmp/discord_payload.json << EOF
        {
          "embeds": [{
            "title": "${{ steps.event.outputs.emoji }} Issue ${action_pt}",
            "description": "**${{ github.actor }}** ${action_pt} a issue [#${{ github.event.issue.number }} - ${{ github.event.issue.title }}](${{ github.event.issue.html_url }})",
            "color": ${{ steps.event.outputs.color }},
            "fields": [
              {
                "name": "Repositório",
                "value": "[${{ github.repository }}](${{ github.event.repository.html_url }})",
                "inline": true
              },
              {
                "name": "Labels",
                "value": "$(echo '${{ toJson(github.event.issue.labels) }}' | jq -r 'map(.name) | join(", ")' | head -c 50)",
                "inline": true
              }
            ],
            "author": {
              "name": "${{ github.actor }}",
              "icon_url": "${{ github.event.sender.avatar_url }}"
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
          }]
        }
        EOF
        
        curl -H "Content-Type: application/json" -X POST -d @/tmp/discord_payload.json "${{ secrets.DISCORD_WEBHOOK_URL }}"

    - name: Notify Release Event
      if: github.event_name == 'release'
      run: |
        cat > /tmp/discord_payload.json << EOF
        {
          "embeds": [{
            "title": "${{ steps.event.outputs.emoji }} Nova Release: ${{ github.event.release.tag_name }}",
            "description": "**${{ github.actor }}** publicou uma nova release!\n\n**${{ github.event.release.name }}**\n\n${{ github.event.release.body }}",
            "color": ${{ steps.event.outputs.color }},
            "fields": [
              {
                "name": "Tag",
                "value": "\`${{ github.event.release.tag_name }}\`",
                "inline": true
              },
              {
                "name": "Pre-release",
                "value": "${{ github.event.release.prerelease }}",
                "inline": true
              }
            ],
            "author": {
              "name": "${{ github.actor }}",
              "icon_url": "${{ github.event.sender.avatar_url }}"
            },
            "url": "${{ github.event.release.html_url }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
          }]
        }
        EOF
        
        curl -H "Content-Type: application/json" -X POST -d @/tmp/discord_payload.json "${{ secrets.DISCORD_WEBHOOK_URL }}"

    - name: Notify Branch/Tag Creation
      if: github.event_name == 'create'
      run: |
        cat > /tmp/discord_payload.json << EOF
        {
          "embeds": [{
            "title": "${{ steps.event.outputs.emoji }} ${{ github.event.ref_type }} criada",
            "description": "**${{ github.actor }}** criou a ${{ github.event.ref_type }} \`${{ github.event.ref }}\`",
            "color": ${{ steps.event.outputs.color }},
            "fields": [
              {
                "name": "Repositório",
                "value": "[${{ github.repository }}](${{ github.event.repository.html_url }})",
                "inline": true
              },
              {
                "name": "Tipo",
                "value": "${{ github.event.ref_type }}",
                "inline": true
              },
              {
                "name": "Nome",
                "value": "\`${{ github.event.ref }}\`",
                "inline": true
              }
            ],
            "author": {
              "name": "${{ github.actor }}",
              "icon_url": "${{ github.event.sender.avatar_url }}"
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
          }]
        }
        EOF
        
        curl -H "Content-Type: application/json" -X POST -d @/tmp/discord_payload.json "${{ secrets.DISCORD_WEBHOOK_URL }}"

    - name: Notify Branch/Tag Deletion
      if: github.event_name == 'delete'
      run: |
        cat > /tmp/discord_payload.json << EOF
        {
          "embeds": [{
            "title": "${{ steps.event.outputs.emoji }} ${{ github.event.ref_type }} deletada",
            "description": "**${{ github.actor }}** deletou a ${{ github.event.ref_type }} \`${{ github.event.ref }}\`",
            "color": ${{ steps.event.outputs.color }},
            "fields": [
              {
                "name": "Repositório",
                "value": "[${{ github.repository }}](${{ github.event.repository.html_url }})",
                "inline": true
              },
              {
                "name": "Tipo",
                "value": "${{ github.event.ref_type }}",
                "inline": true
              },
              {
                "name": "Nome",
                "value": "\`${{ github.event.ref }}\`",
                "inline": true
              }
            ],
            "author": {
              "name": "${{ github.actor }}",
              "icon_url": "${{ github.event.sender.avatar_url }}"
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.000Z)"
          }]
        }
        EOF
        
        curl -H "Content-Type: application/json" -X POST -d @/tmp/discord_payload.json "${{ secrets.DISCORD_WEBHOOK_URL }}"

    - name: Cleanup
      if: always()
      run: |
        rm -f /tmp/discord_payload.json
